@mixin keyframe ($animation_name) {
	@-webkit-keyframes #{$animation_name} {
		@content;
	}

	@-moz-keyframes #{$animation_name} {
		@content;
	}

	@-o-keyframes #{$animation_name} {
		@content;
	}

	@keyframes #{$animation_name} {
		@content;
	}
}
@mixin animation ($duration, $animation, $fill: forwards, $delay: 0s) {
	-webkit-animation-delay: $delay;
	-webkit-animation-duration: $duration;
	-webkit-animation-name: $animation;
	-webkit-animation-fill-mode: $fill; /* this prevents the animation from restarting! */

	-moz-animation-delay: $delay;
	-moz-animation-duration: $duration;
	-moz-animation-name: $animation;
	-moz-animation-fill-mode: $fill; /* this prevents the animation from restarting! */

	-o-animation-delay: $delay;
	-o-animation-duration: $duration;
	-o-animation-name: $animation;
	-o-animation-fill-mode: $fill; /* this prevents the animation from restarting! */

	animation-delay: $delay;
	animation-duration: $duration;
	animation-name: $animation;
	animation-fill-mode: $fill; /* this prevents the animation from restarting! */
}
@mixin animation($str...) {
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
	animation: #{$str};
}
@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
}
@mixin media-xs {
	@media ( max-width:576px ) {
		@content;
	}
}
@mixin media-sm {
	@media ( min-width:576px ) {
		@content;
	}
}
@mixin media-md {
	@media ( min-width:768px ) {
		@content;
	}
}
@mixin media-lg {
	@media ( min-width:992px ) {
		@content;
	}
}
@mixin media-xl {
	@media ( min-width:1200px ) {
		@content;
	}
}
@mixin text-shadow ($string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: $string;
};
@mixin box-shadow ($string) {
	-webkit-box-shadow: $string;
	-moz-box-shadow: $string;
	box-shadow: $string;
}
@mixin drop-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {
	-webkit-box-shadow:	$x $y $blur $spread rgba(0, 0, 0, $alpha);
	-moz-box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
	box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
}
@mixin inner-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25, $important: null) {
	-webkit-box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha)$important;
	-moz-box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha)$important;
	box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha)$important;
}
@mixin box-sizing ($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing: $type;
	box-sizing: $type;
}
@mixin border-radius ($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;

	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}
@mixin border-radiuses ($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
	-webkit-border-top-right-radius: $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius: $bottomleft;
	-webkit-border-top-left-radius: $topleft;

	-moz-border-radius-topright: $topright;
	-moz-border-radius-bottomright: $bottomright;
	-moz-border-radius-bottomleft: $bottomleft;
	-moz-border-radius-topleft: $topleft;

	border-top-right-radius: $topright;
	border-bottom-right-radius: $bottomright;
	border-bottom-left-radius: $bottomleft;
	border-top-left-radius: $topleft;

	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}
@mixin opacity ($opacity: 0.5) {
	-webkit-opacity: $opacity;
	-moz-opacity: $opacity;
	opacity: $opacity;
}
@mixin gradient ($startColor: #eee, $endColor: white) {
	background-color: $startColor;
	background: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
	background: -webkit-linear-gradient(top, $startColor, $endColor);
	background: -moz-linear-gradient(top, $startColor, $endColor);
	background: -ms-linear-gradient(top, $startColor, $endColor);
	background: -o-linear-gradient(top, $startColor, $endColor);
}
@mixin horizontal-gradient ($startColor: #eee, $endColor: white) {
	background-color: $startColor;
	background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
	background-image: -webkit-linear-gradient(left, $startColor, $endColor);
	background-image: -moz-linear-gradient(left, $startColor, $endColor);
	background-image: -ms-linear-gradient(left, $startColor, $endColor);
	background-image: -o-linear-gradient(left, $startColor, $endColor);
}

@mixin transition ($transition: 0.5s all ease) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
}
@mixin _transform($string){
	-webkit-transform: $string;
	-moz-transform: $string;
	-ms-transform: $string;
	-o-transform: $string;
	transform: $string;
}
@mixin scale ($x:1 , $y:1) {
	-webkit-transform: scale($x , $y);
	-moz-transform: scale($x , $y);
	-ms-transform: scale($x , $y);
	-o-transform: scale($x , $y);
	transform: scale($x , $y);
}
@mixin rotate ($deg) {
	-webkit-transform: rotate($deg+deg);
	-moz-transform: rotate($deg+deg);
	-ms-transform: rotate($deg+deg);
	-o-transform: rotate($deg+deg);
	transform: rotate($deg+deg);
}
@mixin skew ($deg, $deg2) {
	-webkit-transform: skew($deg+deg, $deg2+deg);
	-moz-transform: skew($deg+deg, $deg2+deg);
	-ms-transform: skew($deg+deg, $deg2+deg);
	-o-transform: skew($deg+deg, $deg2+deg);
	transform: skew($deg+deg, $deg2+deg);
}
@mixin translate ($x, $y:0) {
	-webkit-transform: translate($x, $y);
	-moz-transform: translate($x, $y);
	-ms-transform: translate($x, $y);
	-o-transform: translate($x, $y);
	transform: translate($x, $y);
}
@mixin translate3d ($x, $y: 0, $z: 0) {
	-webkit-transform: translate3d($x, $y, $z);
	-moz-transform: translate3d($x, $y, $z);
	-ms-transform: translate3d($x, $y, $z);
	-o-transform: translate3d($x, $y, $z);
	transform: translate3d($x, $y, $z);
}
@mixin perspective ($value: 1000) {
	-webkit-perspective: $value;
	-moz-perspective: $value;
	-ms-perspective: $value;
	perspective: $value;
}
@mixin transform-origin ($x:center, $y:center) {
	-webkit-transform-origin: $x $y;
	-moz-transform-origin: $x $y;
	-ms-transform-origin: $x $y;
	-o-transform-origin: $x $y;
	transform-origin: $x $y;
}
@function color($color-name) {
	@return map-get($colors, quote($color-name));
}

@mixin gradient-text($color-name) {
	@include linear-gradient($color-name);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
}
@mixin linear-gradient($color-name) {
	background: -webkit-linear-gradient(gradient-color($color-name));
	background: -moz-linear-gradient(gradient-color($color-name));
	background: -o-linear-gradient(gradient-color($color-name));
	background: linear-gradient(gradient-color($color-name));
}
@mixin radial-gradient($color-name) {
	background: -webkit-radial-gradient(gradient-color($color-name));
	background: -moz-radial-gradient(gradient-color($color-name));
	background: -o-radial-gradient(gradient-color($color-name));
	background: radial-gradient(gradient-color($color-name));
}
@mixin gradient-mask($color-name) {
	mask-image: -webkit-gradient(gradient-color($color-name));
	-webkit-mask-image: -webkit-gradient(gradient-color($color-name));
}
@function gradient-color($color-name) {
	@return map-get($gradients, quote($color-name));
}